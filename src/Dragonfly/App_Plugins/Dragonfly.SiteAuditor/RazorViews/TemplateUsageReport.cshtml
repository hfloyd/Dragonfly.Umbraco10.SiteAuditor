@inherits UmbracoViewPage<StatusMessage>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations

*@
@{
	Layout = "_Master.cshtml";
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;

	StatusMessage message = Model;
	var templatesUsedOnContent = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "TemplatesUsedOnContent") as GroupingCollection<AuditableContent>;
	var templatesNotUsedOnContent = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "TemplatesNotUsedOnContent") as List<ITemplate>;

	var counter = 0;
	var Title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", "Template Usage Report");
}

@section Head {
	<title>@Title</title>
}

<!--TemplateUsageReport-->
<h1>@Title</h1>

@if (templatesNotUsedOnContent != null)
{
	<h2>Templates Not In Use on Content: @templatesNotUsedOnContent.Count()</h2>
	if (templatesNotUsedOnContent.Any())
	{
		<ul>
			@foreach (var template in templatesNotUsedOnContent)
			{
				var editUrl = "/umbraco#/settings/templates/edit/" + template.Id;
				<li>
					<a href="@editUrl" target="_blank"> @template.Alias</a>
					@if (template.IsMasterTemplate)
					{
						<span style="color: red;">(Master)</span>
					}
				</li>
			}
		</ul>
	}
}

@if (templatesUsedOnContent != null)
{
	<h2>Templates In Use on Content</h2>

	<table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width: 100%;">
		<thead>
			<tr>
				<th>#</th>
				<th>Template</th>
				<th>Qty of Content Nodes</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var t in templatesUsedOnContent.Groups)
			{
				counter++;

				<tr>
					@*// #*@
					<td>@counter</td>

					@*//Template*@
					<td>@t.GroupName["Key"]</td>

					@*//Qty of Content Nodes*@
					<td>@t.Collection.Count()</td>

				</tr>
			}

		</tbody>
		<tfoot>
			<tr>
				<td>#</td>
				<th>Template</th>
				<th>Qty of Content Nodes</th>
			</tr>
		</tfoot>
	</table>
}
