@inherits UmbracoViewPage<IEnumerable<AuditableMedia>>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations
	ShowImageThumbnails (bool)							: Show image thumbnails

*@
@{
	Layout = "_Master.cshtml";
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;

	var propertyAlias = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "PropertyAlias");
	// var includeUnpublished = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "IncludeUnpublished");

	IEnumerable<AuditableMedia> contentList = Model.ToList();
	var counter = 0;
	var showThumbnails = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "ShowImageThumbnails", false);
	var title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", $"Nodes with Values for Property '{@propertyAlias}'");
	//	var hasDimensions = contentList.Count(n => n.WidthPixels != 0) > 0;
	//	var hasAltText = contentList.Count(n => !string.IsNullOrEmpty(n.AltText)) > 0;
}

@section Head {
	<title>@title</title>
}

<!--MediaWithValuesTable-->
<h1>@title</h1>
<p>Total Nodes Returned: @contentList.Count()</p>

<table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width: 100%;">
	<thead>
		<tr>
			<th>#</th>
			<th>Actions</th>
			<th>"@propertyAlias" Data Type</th>
			<th>Media Type</th>
			<th>Node ID</th>
			<th>Node Path</th>
			<th>"@propertyAlias" Value</th>
			<th>Value Length</th>
			<th>Has Value</th>
			<th>Has File</th>
			<th>File Extension</th>
			@* <th>Value Model Type</th>*@
			<th>Date Last Updated</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var node in contentList)
		{
			counter++;
			var dtInfo = AuditorInfoService.GetPropertyDataTypeInfo(propertyAlias, node.UmbPublishedNode, true);
			<tr>

				@*  // #*@
				<td>@counter</td>

				@*  //Actions*@
				<td>
					@try
					{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/MediaNodeActions.cshtml", node);
					}
					catch (Exception e)
					{
						<span>Error on Node # @node.UmbPublishedNode.Id : @e.Message</span>
					}
				</td>

				@*//PropertyAlias Type*@
				<td>
					@try
					{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/PropertyTypeInfo.cshtml", dtInfo);
					}
					catch (Exception e)
					{
						<span>Error on Node # @node.UmbPublishedNode.Id : @e.Message</span>
					}
				</td>

				@*//Media*@
				<td>
					@try
					{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DocTypeInfo.cshtml", dtInfo);
					}
					catch (Exception e)
					{
						<span>Error on Node # @node.UmbPublishedNode.Id : @e.Message</span>
					}
				</td>

				@*//Node ID*@
				<td>@node.UmbPublishedNode.Id</td>

				@*//Node Path*@
				<td>@node.NodePathAsCustomText()</td>


				@*//PropertyAlias Value*@
				@if (dtInfo.DataType != null)
				{
					<td>
						@try
						{
							Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/PropertyDataValue.cshtml", dtInfo);
						}
						catch (Exception e)
						{
							<span>Error on Node # @node.UmbPublishedNode.Id : @e.Message</span>
						}
					</td>

				}
				else
				{
					var propVal = node.UmbPublishedNode.Value<string>(propertyAlias);
					<td>@propVal</td>
				}

				@*//Value Length*@
				<td>
					@if (node.UmbPublishedNode.HasValue(propertyAlias) && dtInfo!=null && dtInfo.PropertyData != null)
					{
						@dtInfo!.PropertyData!.ToString()!.Length
					}
					else
					{
						<text>0</text>
					}
				</td>


				@*//Has Value*@
				<td>@PropertyHasValue(dtInfo, node, propertyAlias)</td>


				@* //Has File*@
				<td>@(node.SizeInBytes > 0)</td>

				@* //File Extension*@
				<td>@node.FileExtension</td>

				@*//Value Model Type
							<td>@dtInfo.Property.GetValue().GetType().ToString()</td>*@

				@*//Date Last Updated*@
				<td>
					@try
					{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DateValue.cshtml", node.UmbPublishedNode.UpdateDate);
					}
					catch (Exception e)
					{
						<span>Error on Node # @node.UmbPublishedNode.Id : @e.Message</span>
					}
				</td>

			</tr>
		}

	</tbody>
	<tfoot>
		<tr>
			<td>#</td>
			<td>Actions</td>
			<th>"@propertyAlias" Data Type</th>
			<th>Media Type</th>
			<th>Node ID</th>
			<th>Node Path</th>
			<th>"@propertyAlias" Value</th>
			<th> Value Length</th>
			<th> Has Value</th>
			<th>Has File</th>
			<th>File Extension</th>
			@* <th>Value Model Type</th>*@
			<th>Date Last Updated</th>
		</tr>
	</tfoot>
</table>


@functions {
	bool PropertyHasValue(NodePropertyDataTypeInfo DtInfo, AuditableMedia Node, string PropertyAlias)
	{
		if (DtInfo.PropertyData is null)
		{
			return false;
		}

		if (Node.UmbPublishedNode == null)
		{
			return false;
		}

		if (!Node.UmbPublishedNode.HasValue(PropertyAlias))
		{
			return false;
		}

		var editor = DtInfo.DataType != null ? DtInfo.DataType.EditorAlias : "";
		var valueString = DtInfo.PropertyData != null ? DtInfo.PropertyData.ToString() : "";

		if (valueString is null)
		{
			return false;
		}
		else if (editor == "Umbraco.MediaPicker3" && valueString.Length < 3)
		{
			return false;
		}

		//else
		return true;
	}
}