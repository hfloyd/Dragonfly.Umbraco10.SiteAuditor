@inherits UmbracoViewPage<IEnumerable<AuditableContent>>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations

*@
@{
	Layout = "_Master.cshtml";
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;
	var paramPublishedOnly = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "PublishedOnly");

	IEnumerable<AuditableContent> contentList = Model.ToList();
	var propertyAlias = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "PropertyAlias");

	var counter = 0;
	var title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", $"Nodes with Values for Property '{@propertyAlias}'");
}

@section Head {
	<title>@title</title>
}

<!--ContentWithValuesTable-->
<h1>@title</h1>
@if (paramPublishedOnly)
{
	<p>Only Published Nodes</p>
}
<p>Total Nodes Returned: @contentList.Count()</p>

<table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width: 100%;">
	<thead>
		<tr>
			<th>#</th>
			<th>Actions</th>
			<th>"@propertyAlias" Data Type</th>
			<th>DocType</th>
			<th>Node ID</th>
			<th>Node Path</th>
			<th>Is Published?</th>
			<th>"@propertyAlias" Value</th>
			<th> Value Length</th>
			<th> Has Value</th>
			@* <th>Value Model Type</th>*@
			<th>Date Last Updated</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var node in contentList)
		{
			counter++;
			var dtInfo = paramPublishedOnly ? AuditorInfoService.GetPropertyDataTypeInfo(propertyAlias, node.UmbPublishedNode): AuditorInfoService.GetPropertyDataTypeInfo(propertyAlias, node.UmbContentNode);
			<tr>

				@*  // #*@
				<td>@counter</td>

				@*  //Actions*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/NodeActions.cshtml", node);
					}
				</td>

				@*//PropertyAlias Type*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/PropertyTypeInfo.cshtml", dtInfo);
					}
				</td>

				@*//DocType*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DocTypeInfo.cshtml", dtInfo);
					}
				</td>

				@*//Node ID*@
				<td>@node.NodeId</td>

				@*//Node Path*@
				<td>@node.NodePathAsCustomText()</td>

				@*//Is Published?*@
				<td>@node.IsPublished</td>

				@*//PropertyAlias Value*@
				@if (dtInfo.DataType != null)
				{
					<td>
						@{
							Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/PropertyDataValue.cshtml", dtInfo);
						}
					</td>

				}
				else
				{
					var propVal = "";
					if (paramPublishedOnly)
					{
						propVal = node.UmbPublishedNode!.Value<string>(propertyAlias);
					}
					else if (node.UmbContentNode!=null)
					{
						propVal = node.UmbContentNode.GetValue<string>(propertyAlias);
					}

					<td>@propVal</td>
				}

				@*//Value Length*@
				<td>
					@if (paramPublishedOnly)
					{
						if (node.UmbPublishedNode.HasPropertyWithValue(propertyAlias) & dtInfo.PropertyData != null)
						{
							@dtInfo.PropertyData.ToString().Length
						}
						else
						{
							<text>0</text>
						}
					}
					else if (node.UmbContentNode!=null)
					{
						if (node.UmbContentNode.HasPropertyValue(propertyAlias) & dtInfo.PropertyData != null)
						{
							@dtInfo.PropertyData.ToString().Length
						}
						else
						{
							<text>0</text>
						}
					}
				</td>


				@*//Has Value*@
				<td>@PropertyHasValue(dtInfo, node, propertyAlias, paramPublishedOnly)</td>

				@*//Value Model Type
							<td>@dtInfo.Property.GetValue().GetType().ToString()</td>*@

				@*//Date Last Updated*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DateValue.cshtml", node.NodeUpdateDate);
					}
				</td>

			</tr>
		}

	</tbody>
	<tfoot>
		<tr>
			<td>#</td>
			<td>Actions</td>
			<th>"@propertyAlias" Data Type</th>
			<th>DocType</th>
			<th>Node ID</th>
			<th>Node Path</th>
			<th>Is Published?</th>
			<th>"@propertyAlias" Value</th>
			<th> Value Length</th>
			<th> Has Value</th>
			@* <th>Value Model Type</th>*@
			<th>Date Last Updated</th>
		</tr>
	</tfoot>
</table>


@functions {
	bool PropertyHasValue(NodePropertyDataTypeInfo DtInfo, AuditableContent Node, string PropertyAlias, bool PublishedOnly)
	{
		if (DtInfo.PropertyData is null)
		{
			return false;
		}

		if (PublishedOnly)
		{
			if (!Node.UmbPublishedNode.HasPropertyWithValue(PropertyAlias))
			{
				return false;
			}
		}
		else
		{
			if (!Node.UmbContentNode.HasPropertyValue(PropertyAlias))
			{
				return false;
			}
		}

		var editor = DtInfo.DataType.EditorAlias;
		var valueString = DtInfo.PropertyData.ToString() is not null ? DtInfo.PropertyData.ToString() : "";

		if (valueString is null)
		{
			return false;
		}
		else if (editor == "Umbraco.MediaPicker3" && valueString.Length < 3)
		{
			return false;
		}

		//else
		return true;
	}
}