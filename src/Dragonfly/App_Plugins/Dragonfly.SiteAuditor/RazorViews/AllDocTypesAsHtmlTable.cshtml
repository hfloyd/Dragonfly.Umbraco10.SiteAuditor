@inherits UmbracoViewPage<IEnumerable<AuditableDocType>>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations

*@
@{
	Layout = "_Master.cshtml";
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;

	IEnumerable<AuditableDocType> docTypes = Model.ToList();
	//var propertyAlias = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "PropertyAlias");
	// var includeUnpublished = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "IncludeUnpublished");

	var counter = 0;
	var Title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", "All Document Types");
}

@section Head {
	<title>@Title</title>
}

<!--AllDocTypesAsHtmlTable-->
<h1>@Title</h1>
<p>Total Document Types Returned: @docTypes.Count()</p>

<table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width: 100%;">
	<thead>
		<tr>
			<th>#</th>
			<th>Actions</th>
			<th>Doctype Name</th>
			<th>Alias</th>
			<th>Folder</th>
			<th>Allowed Templates</th>
			<th>Default Template</th>
			<th>Allowed Children</th>
			<th>Has Content Nodes?</th>
			<th>Is an Element Type?</th>
			<th>Is a Composition?</th>
			<th>Compositions Used</th>
			<th>Id</th>
			<th>GUID</th>
			<th>Create Date</th>
			<th>Update Date</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var dt in docTypes)
		{
			counter++;

			<tr>

				@*// #*@
				<td>@counter</td>

				@*//Actions*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/SchemaActions.cshtml", dt.Id, new ViewDataDictionary(ViewData)
				{
				{"EntityType", "DocType" }
				});
					}
				</td>

				@*//Name*@
				<td>@dt.Name</td>

				@*//Alias*@
				<td>@dt.Alias</td>

				@*//Folder*@
				<td>@dt.PathAsText</td>

				@*//Allowed Templates*@

				@if (dt.AllowedTemplates.Any())
				{
					<td>@Html.Raw(string.Join(" <br/> ", dt.AllowedTemplates.Select(n => $"{n.Value} [{n.Key}]")))</td>
				}
				else
				{
					<td>~NONE~</td>
				}

				@*//Default Template*@
				<td>@dt.DefaultTemplateName</td>

				@*//Allowed Children*@

				@if (dt.ContentType.AllowedContentTypes.Any())
				{
					<td>@Html.Raw(string.Join(" <br/> ", dt.ContentType.AllowedContentTypes.Select(n => $"{n.Alias}")))</td>
				}
				else
				{
					<td>~NONE~</td>
				}

				@*//Has Content Nodes?*@
				<td>@dt.HasContentNodes</td>

				@*//Is an Element Type?*@
				<td>@dt.IsElement</td>

				@*//Is a Composition?*@
				<td>@dt.IsComposition</td>

				@*//Compositions Used*@
				@if (dt.CompositionsUsed.Any())
				{
					<td>@Html.Raw(string.Join(" <br/> ", dt.CompositionsUsed.Select(n => $"{n.Value} [{n.Key}]")))</td>
				}
				else
				{
					<td>~NONE~</td>
				}

				@*// ID*@
				<td>@dt.Id</td>

				@*// GUID*@
				<td>@dt.Guid.ToString()</td>

				@* //Create Date*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DateValue.cshtml", dt.ContentType.CreateDate);
					}
				</td>

				@*//Date Last Updated*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DateValue.cshtml", dt.ContentType.UpdateDate);
					}
				</td>

			</tr>
		}

	</tbody>
	<tfoot>
		<tr>
			<td>#</td>
			<td>Actions</td>
			<th>Name</th>
			<th>Alias</th>
			<th>Folder</th>
			<th>Allowed Templates</th>
			<th>Default Templates</th>
			<th>Allowed Children</th>
			<th>Has Nodes</th>
			<th>Is Element</th>
			<th>Is Comp</th>
			<th>Comps Used</th>
			<th>Id</th>
			<th>GUID</th>
			<th>Create Date</th>
			<th>Update Date</th>
		</tr>
	</tfoot>
</table>
