@inherits UmbracoViewPage<IList<string>>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations

*@
@{
	Layout = "_Master.cshtml";
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;

//	IEnumerable<AuditableContent> contentList = Model.ToList();
//	var propertyAlias = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "PropertyAlias");
	// var includeUnpublished = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "IncludeUnpublished");

	var allPropsAliases = Model.ToList();

	var counter = 0;
	var Title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", $"Get Content with Values: Available Properties");
}

@section Head {
	<title>@Title</title>
}

<!--ContentWithValuesList-->
<h1>Get Content with Values</h1>
<p>NOTE: Choosing the "Only Published" option is faster and less resource-intensive.</p>

<h3>Available Properties</h3>
<ol>
@foreach (var propAlias in allPropsAliases.OrderBy(n => n))
{
	var url1 = $"/umbraco/backoffice/Dragonfly/SiteAuditor/GetContentWithValues?PropertyAlias={propAlias}";
	var url2 = $"{url1}&PublishedOnly=true";
		<li>@propAlias <a target="_blank" href="@url1">All Content</a> | <a target="_blank" href="@url2">Only Published Content</a></li>
}
</ol>