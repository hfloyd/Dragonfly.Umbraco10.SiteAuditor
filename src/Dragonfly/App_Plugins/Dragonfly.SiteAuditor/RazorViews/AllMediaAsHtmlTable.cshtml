@inherits UmbracoViewPage<IEnumerable<AuditableMedia>>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations
	ShowImageThumbnails (bool)							: Show image thumbnails

*@
@{
	Layout = "_Master.cshtml";
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;
	var propertyAlias = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "PropertyAlias");
	var includeUnpublished = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "IncludeUnpublished");

	IEnumerable<AuditableMedia> contentList = Model.ToList();

	var counter = 0;
	var requestUri = Dragonfly.NetHelpers.Urls.CurrentRequestUri(Context.Request);
	var filterdByType = Dragonfly.NetHelpers.Urls.GetSafeQueryStringValue<string>(requestUri, "MediaTypeAlias", "");
	//var showThumbnails = Dragonfly.NetHelpers.Urls.GetSafeQueryStringValue<bool>(requestUri, "ShowImageThumbnails", false);

	var showThumbnails = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataBool(ViewData, "ShowImageThumbnails", false);
	var title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", "All Media");

	var hasDimensions = contentList.Count(n => n.WidthPixels != 0) > 0;
	var hasAltText = contentList.Count(n => !string.IsNullOrEmpty(n.AltText)) > 0;
}

@section Head {
	<title>@title</title>
}

<!--AllMediaAsHtmlTable-->
<h1>@title</h1>
@if (filterdByType != "")
{
	<h2>Media of type '@filterdByType' Only</h2>
}
<p>Total Nodes Returned: @contentList.Count()</p>

<table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width:100%">
	<thead>
		<tr>
			<th>#</th>
			<th>Actions</th>
			<th>Node Name</th>
			<th>NodeID</th>
			<th>Node Path</th>
			<th>DocType</th>
			<th>ParentID</th>
			<th>Full URL</th>
			<th>Has File</th>
			<th>File Extension</th>
			@if (showThumbnails)
			{
				<th>Thumbnail</th>
			}
			@if (hasDimensions)
			{
				<th>Width</th>
				<th>Height</th>
			}
			@if (hasAltText)
			{
				<th>Alt Text</th>
			}
			<th>File Size</th>
			<th>Size <small>(In Bytes)</small></th>
			<th>Create Date</th>
			<th>Create User</th>
			<th>Update Date</th>
			<th>Update User</th>
			<th>UDI</th>
			<th>GUID</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var node in contentList)
		{
			counter++;
			//var dtInfo = AuditorInfoService.GetPropertyDataTypeInfo( propertyAlias, node.UmbPublishedNode);

			<tr>

				@*  // # *@
				<td>@counter</td>

				@* //Actions*@
				<td>
					@try
					{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/MediaNodeActions.cshtml", node);
					}
					catch (Exception e)
					{
						<span>Error on Node # @node.UmbMediaNode.Id : @e.Message</span>
					}
				</td>


				@* //Node Name*@
				<td>@node.UmbMediaNode.Name</td>

				@* //Node ID*@
				<td>@node.UmbMediaNode.Id</td>

				@* //Node Path*@
				<td>@node.NodePathAsText</td>

				@* //DocType*@
				<td>@node.UmbMediaNode.ContentType.Alias</td>

				@* //ParentID*@
				<td>@node.UmbMediaNode.ParentId</td>

				@* //Full URL*@
				<td><small><a href="@node.FullUrl" target="_blank">@node.FullUrl</a></small></td>

				@* //Has File*@
				<td>@(node.SizeInBytes > 0)</td>

				@* //File Extension*@
				<td>@node.FileExtension</td>

				@*//Thumbnail*@
				@if (showThumbnails)
				{
					<td>
						@try
						{
							Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/MediaIPub.cshtml", node.UmbPublishedNode,
							new ViewDataDictionary(ViewData)
						{
				{"ThumbOnly", true}
						});
						}
						catch (Exception e)
						{
							<span>Error on Node # @node.UmbMediaNode.Id : @e.Message</span>
						}
					</td>
				}

				@if (hasDimensions)
				{
					@* //Width*@
					<td>@node.WidthPixels</td>

					@* //Height*@
					<td>@node.HeightPixels</td>
				}

				@* //Alt Text*@
				@if (hasAltText)
				{
					<td>@node.AltText</td>
				}

				@* //File Size *@
				<td>@node.SizeReadable</td>

				@* //Size (In Bytes)*@
				<td>@node.SizeInBytes</td>


				@* //Create Date*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DateValue.cshtml", node.UmbMediaNode.CreateDate);
					}
				</td>

				@* //Create User *@
				<td>
					@if (node.CreateUser != null)
					{
						<text>@node.CreateUser.Name</text>
						<br />
						<small>@node.CreateUser.Username</small>
					}
					else
					{
						<text>UNKNOWN</text>
					}
				</td>

				@*//Date Last Updated*@
				<td>
					@{
						Html.RenderPartial("/App_Plugins/Dragonfly.SiteAuditor/RazorViews/DataFormats/DateValue.cshtml", node.UmbMediaNode.UpdateDate);
					}
				</td>

				@* //Update User *@
				<td>
					@if (node.UpdateUser != null)
					{
						<text>@node.UpdateUser.Name</text>
						<br />
						<small>@node.UpdateUser.Username</small>
					}
					else
					{
						<text>UNKNOWN</text>
					}
				</td>

				@* //Node UDI*@
				<td><small>@node.UmbMediaNode.GetUdi()</small></td>

				@* //Node GUID*@
				<td><small>@node.UmbMediaNode.Key.ToString()</small></td>
			</tr>
		}
	</tbody>
	<tfoot>
		<tr>
			<td>#</td>
			<td>Actions</td>
			<th>Name</th>
			<th>ID</th>
			<th>Path</th>
			<th>DocType</th>
			<th>ParentID</th>
			<th>URL</th>
			<th>Has File</th>
			<th>File Extension</th>
			@if (showThumbnails)
			{
				<th>Thumbnail</th>
			}
			@if (hasDimensions)
			{
				<th>Width</th>
				<th>Height</th>
			}
			@if (hasAltText)
			{
				<th>Alt Text</th>
			}
			<th>File Size</th>
			<th>Size <small>(In Bytes)</small></th>
			<th>Create Date</th>
			<th>Create User</th>
			<th>Update Date</th>
			<th>Update User</th>
			<th>UDI</th>
			<th>GUID</th>
		</tr>
	</tfoot>
</table>
